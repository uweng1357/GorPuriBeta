// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(100)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  phone     String?  @db.VarChar(20)
  role      Role     @default(USER)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  reservations Reservation[]

  @@map("users")
}

model Field {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(100)
  description  String?  @db.Text
  location     String   @db.VarChar(200)
  pricePerHour Decimal  @map("price_per_hour") @db.Decimal(10, 2)
  imageUrl     String?  @map("image_url") @db.VarChar(500)
  facilities   Json?
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  schedules     FieldSchedule[]
  reservations  Reservation[]

  @@map("fields")
}

model FieldSchedule {
  id          Int      @id @default(autoincrement())
  fieldId     Int      @map("field_id")
  dayOfWeek   DayOfWeek @map("day_of_week")
  startTime   String   @map("start_time")
  endTime     String   @map("end_time")
  isAvailable Boolean  @default(true) @map("is_available")

  // Relations
  field Field @relation(fields: [fieldId], references: [id], onDelete: Cascade)

  @@map("field_schedules")
}

model Reservation {
  id             Int             @id @default(autoincrement())
  userId         Int             @map("user_id")
  fieldId        Int             @map("field_id")
  reservationDate DateTime       @map("reservation_date")
  startTime      String          @map("start_time")
  endTime        String          @map("end_time")
  totalPrice     Decimal         @map("total_price") @db.Decimal(10, 2)
  status         ReservationStatus @default(PENDING)
  paymentStatus  PaymentStatus   @default(PENDING) @map("payment_status")
  paymentProof   String?         @map("payment_proof") @db.VarChar(500)
  paymentNotes   String?         @map("payment_notes") @db.Text
  notes          String?         @db.Text
  createdAt      DateTime        @default(now()) @map("created_at")
  updatedAt      DateTime        @updatedAt @map("updated_at")

  // Relations
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  field Field @relation(fields: [fieldId], references: [id], onDelete: Cascade)

  @@map("reservations")
}

// Enums
enum Role {
  USER
  ADMIN

  @@map("role")
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY

  @@map("day_of_week")
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED

  @@map("reservation_status")
}

enum PaymentStatus {
  PENDING
  PAID
  REFUNDED

  @@map("payment_status")
}